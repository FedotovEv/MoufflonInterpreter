pugixml  Installation :

     Step 1: Download and install TinyXML

        pugixml is distributed in source form. You can either download a source distribution or clone the Git         repository.

 1. Source distributions
 
       You can download the latest source distribution as an archive:
 
  For windows:
      pugixml-1.10.zip (Windows line endings) . Download it by using 
  URL     https://github.com/zeux/pugixml/releases/download/v1.10/pugixml-1.10.zip
 

  For Unix:
      pugixml-1.10.tar.gz (Unix line endings) . Download it by using 
  URL  https://github.com/zeux/pugixml/releases/download/v1.10/pugixml-1.10.tar.gz


    The distribution contains library source, documentation and some code examples. After downloading   the   distribution, install pugixml by extracting all files from the compressed archive.

 
 2. Git repository
       The Git repository is located at https://github.com/zeux/pugixml/. There is a Git tag "v{version}" for   each   version; also there is the "latest" tag, which always points to the latest stable release.

 For example, to checkout the current version, you can use this command:

  git clone https://github.com/zeux/pugixml
  cd pugixml
  git checkout v1.10

  The repository contains library source, documentation, code examples and full unit test suite.

  Use latest tag if you want to automatically get new versions. Use other tags if you want to switch to   new   versions only explicitly. 
     Step 2: Configure

     The complete pugixml source consists of three files - one source file, pugixml.cpp, and two header               files, pugixml.hpp and pugiconfig.hpp.

     pugixml.hpp is the primary header which you need to include in order to use pugixml classes/functions.
 pugixml.hpp is either in the current directory or in one of include directories of your projects, so that 
 #include "pugixml.hpp" can find the header

     pugiconfig.hpp is a supplementary configuration file.

  Copy the following files to your project folder
pugiconfig.hpp
pugixml.hpp
pugixml.cpp

     Step 3: Try one simple example

       Book.xml file :
 
<?xml version="1.0" ?>
<catalog>
    <book id="bk101" edition="6th edition">
        <author fName="Gambardella" mName="Vijay" lName="Matthew" />
        <title>XML Developer&apos;s Guide</title>
        <genre>Computer</genre>
        <price>44.95</price>
        <publish_date>2000-10-01</publish_date>
        <description>An in-depth look at creating applications with XML.</description>
    </book>
    <book id="bk102" edition="3rd edition">
        <author fName="Ralls"  mName ="Raj" lName="Kim" />
        <title>Midnight Rain</title>
        <genre>Fantasy</genre>
        <price>5.95</price>
        <publish_date>2000-12-16</publish_date>
        <description>A former architect battles corporate zombies, an evil sorceress, and her own childhood to become queen of the world.</description>
    </book>
    <book id="bk103" edition="2nd edition">
        <author fName="Corets" mName="Shekhar" lName="Eva" />
        <title>Maeve Ascendant</title>
        <genre>Fantasy</genre>
        <price>5.95</price>
        <publish_date>2000-11-17</publish_date>
        <description>After the collapse of a nanotechnology society in England, the young survivors lay the foundation for a new society.</description>
    </book>
</catalog>


       Demoxml.cpp file :

  
#include "pugixml.hpp"

#include <iostream>
using namespace std;

int main()
{

    pugi::xml_document doc;

    pugi::xml_parse_result result = doc.load_file("Book.xml");

    pugi::xml_node book1 = doc.child("catalog").child("book");      //check whethert the file is loaded successfully   

    cout << "Load result: " << result.description() <<endl<<endl;  
 
    cout<<" Books Ids :"<<endl<<endl;

    cout<<" Book 1 Id : " << book1.attribute("id").value() << endl;   //get the value of attribute id of book1



    pugi::xml_node book2 = book1.next_sibling();

    cout<<" Book 2 Id : " << book2.attribute("id").value() << endl;     //get the value of attribute id of book2

  
    
    pugi::xml_node book3 = book2.next_sibling();

    cout<<" Book 3 Id : " << book3.attribute("id").value() << endl;    //get the value of attribute id of book3

  
     

}

   Finally run the program by using following commands:

C:/Users/hp/Desktop/pugixmlDemo>g++ Demoxml.cpp pugixml.cpp -o Demoxml.exe

C:/Users/hp/Desktop/pugixmlDemo>Demoxml.exe
Load result: No error

 Books Ids :

 Book 1 Id : bk101
 Book 2 Id : bk102
 Book 3 Id : bk103
